#
# Phase 1:
#

# Begin by running fping against the list of servers, generating all possible IP numbers permitted
# by the subnet masks, listing the range before each one.  Any address listed without a subnet mask
# comes from the output of fping and signifies that the host is reachable.

$ for i in `cat Rockstarserverlist.txt`  # contains servers in Hollywood
> do
> echo "---> $i "
> fping -ag $i
> done
---> 15.199.95.91/28
---> 15.199.94.91/28
---> 11.199.158.91/28
---> 167.172.144.11/32
167.172.144.11    # fping reports that this one is alive
---> 11.199.141.91/28

# From the above, we see that 167.172.144.11 is the only address that is reachable.
# This is not compliant with Rockstar Corp's policy to have no hosts discoverable 
# from outside its domain; recommend blocking ICMP traffic on border router(s).
# This query is at the network layer

#
# Phase 2:
#

# Use nmap to determine which ports are open on the host(s) discovered in Phase 1.
sysadmin@ubuntu-vm:~/repo/08-Networking-Fundamentals/Homework/resources$ nmap -sS 167.172.144.11
You requested a scan type which requires root privileges.
QUITTING!
sysadmin@ubuntu-vm:~/repo/08-Networking-Fundamentals/Homework/resources$ sudo !!

# Okay, now do it the right way...

sudo nmap -sS 167.172.144.11
[sudo] password for sysadmin: 

Starting Nmap 7.60 ( https://nmap.org ) at 2020-05-09 18:11 EDT
Nmap scan report for 167.172.144.11
Host is up (0.17s latency).
Not shown: 995 closed ports
PORT    STATE    SERVICE
22/tcp  open     ssh
25/tcp  filtered smtp
135/tcp filtered msrpc
139/tcp filtered netbios-ssn
445/tcp filtered microsoft-ds

Nmap done: 1 IP address (1 host up) scanned in 274.02 seconds


# Now we know that port 22 is open.
# There are several things to be done about that, but primarily the recommendation
# for phase 1 will prevent discovery from outside.
# Again, this is a network-layer query.

#
# Phase 3:
#

# Let's see whether we can use that open SSH port to get in using a name and password
# that is common to most of their servers

sysadmin@ubuntu-vm:~$ ssh -l jimi 167.172.144.11
jimi@167.172.144.11's password: 
Linux GTscavengerHunt 4.9.0-11-amd64 #1 SMP Debian 4.9.189-3+deb9u1 (2019-09-20) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sat May  9 22:43:05 2020 from 70.181.67.193
Could not chdir to home directory /home/jimi: No such file or directory

# Well, it worked; recommend requiring strong passwords, changed often and independently
# on each host or, better yet, configuring ssh to use public keys
# This is an application-layer vulnerability.

# Now to look for some evidence of why requests to rollingstone.com sometimes go astray

jimi@GTscavengerHunt$ grep rollingstone.com /etc/hosts
98.137.246.8 rollingstone.com

# So there's a local /etc/hosts entry that disagrees with the DNS entry for rollingstone.com:
brianmthomas@:/Users/brianmthomas$ nslookup rollingstone.com
Server:		2600:1700:f900:9190::1
Address:	2600:1700:f900:9190::1#53

Non-authoritative answer:
Name:	rollingstone.com
Address: 151.101.192.69
Name:	rollingstone.com
Address: 151.101.0.69
Name:	rollingstone.com
Address: 151.101.128.69
Name:	rollingstone.com
Address: 151.101.64.69

# and also with the DNS entry for the IP number in the host table:
brianmthomas@:/Users/brianmthomas$ nslookup 98.137.246.8
8.246.137.98.in-addr.arpa	name = media-router-fp2.prod1.media.vip.gq1.yahoo.com.

Authoritative answers can be found from:

# This is a weakness inherent in having two sources for name lookups; recommend cleaning out
# any such entries in /etc/hosts (and using Tripwire to detect changes).
# This problem is found in the network layer.

#
# Phase 4:
#

# look for the note "in the same directory as the configuration file from Phase 3".
# It's a big directory, so I'll limit the listing to the ten newest entries:

jimi@GTscavengerHunt$ ls -ltr | tail
-rw------- 1 root root    1830 Mar 18 13:37 passwd-
-rw-r--r-- 1 root root     833 Mar 18 13:37 group
-rw-r----- 1 root shadow   681 Mar 18 13:37 gshadow
-rw-r--r-- 1 root root     229 Mar 18 13:37 subuid
-rw-r--r-- 1 root root     229 Mar 18 13:37 subgid
-rw-r----- 1 root shadow  2147 Mar 18 13:37 shadow
-rw-r--r-- 1 root root     648 Mar 18 13:40 hosts
-rw-r--r-- 1 root root     112 Mar 18 13:42 packetcaptureinfo.txt
-rw-r--r-- 1 root root    1833 Apr 25 14:50 passwd

# Interesting file name; let's see what's in it:

jimi@GTscavengerHunt$ cat packetcaptureinfo.txt
 Captured Packets are here:
 https://drive.google.com/file/d/1ic-CFFGrbruloYrWaw3PvT71elTkh3eF/view?usp=sharing

# downloaded the file, named secretlogs.pcapng, opened it with Wireshark:
# Lines 5 and 6 in the Wireshark listing of the ARP packet capture
# show a duplicate response to the query for 192.168.47.200, one of which originates from 
# the same address that sent the query.  This smells like an ARPspoofing attack on the part of VMware_1d:b3:b1.	
1	0.000s	VMware_1d:b3:b1	Broadcast	ARP	42	Who has 192.168.47.1? Tell 192.168.47.171
2	0.000s	VMware_c0:00:08	VMware_1d:b3:b1	ARP	60	192.168.47.1 is at 00:50:56:c0:00:08
3	0.007s	VMware_1d:b3:b1	Broadcast	ARP	42	Who has 192.168.47.200? Tell 192.168.47.171
4	0.000s	VMware_0f:71:a3	VMware_1d:b3:b1	ARP	60	192.168.47.200 is at 00:0c:29:0f:71:a3
5	10.585s	VMware_1d:b3:b1	VMware_fd:2f:16	ARP	42	192.168.47.200 is at 00:0c:29:1d:b3:b1

#
# Line 16 below is an HTTP POST message containing a message purported to be from
# a "Mr. Hacker" at hacker@rockstarcorp.com:
# "Hi Got The Blues Corp!  This is a hacker that works at Rock Star Corp.  Rock Star 
# has left port 22, SSH open if you want to hack in.  For 1 Milliion Dollars I will
# provide you the user and password!"
# Also, line 20 requests a rather suspicious-looking file name, but there's no response
# to reveal its contents...
6	49118h  3m 18.102s	10.0.2.15	72.21.91.29	TCP	56	44604 → 80 [ACK] Seq=1 Ack=1 Win=30732 Len=0
7	0.000s	10.0.2.15	104.16.161.215	TCP	56	52386 → 80 [ACK] Seq=1 Ack=1 Win=30184 Len=0
8	0.000s	10.0.2.15	72.21.91.29	TCP	56	44606 → 80 [ACK] Seq=1 Ack=1 Win=30732 Len=0
9	0.000s	10.0.2.15	74.125.136.95	TCP	56	57750 → 80 [ACK] Seq=1 Ack=1 Win=65320 Len=0
10	0.000s	10.0.2.15	74.125.136.95	TCP	56	57752 → 80 [ACK] Seq=1 Ack=1 Win=45440 Len=0
11	0.000s	10.0.2.15	104.16.161.215	TCP	56	52398 → 80 [ACK] Seq=1 Ack=1 Win=30260 Len=0
12	4.688s	10.0.2.15	104.18.127.89	HTTP	784	GET /LoggingAgent/LoggingAgent?url=//www.got....................
13	0.074s	104.18.127.89	10.0.2.15	HTTP	333	HTTP/1.1 200 OK  (application/x-javascript)
14	1.741s	10.0.2.15	104.18.127.89	HTTP	821	GET /LoggingAgent/LoggingAgent?url=//www.got....................
15	0.037s	104.18.127.89	10.0.2.15	HTTP	333	HTTP/1.1 200 OK  (application/x-javascript)
16	1m 44.542s	10.0.2.15	104.18.126.89	HTTP	1876	POST /formservice/en/3f64542cb2e3439....................
17	0.691s	104.18.126.89	10.0.2.15	HTTP	420	HTTP/1.1 303 See Other 
18	0.039s	10.0.2.15	104.16.161.215	HTTP	684	GET /contact-us.php?formI660593e583e747f1a91....................
19	0.112s	104.16.161.215	10.0.2.15	HTTP	3655	Continuation
20	0.042s	10.0.2.15	104.16.161.215	HTTP	598	GET /.well-known/http-opportunistic HTTP/1.1 


